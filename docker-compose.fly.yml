version: '3.8'

# Fly.io optimized Docker Compose
# This uses Fly.io Postgres and Redis add-ons instead of containers

services:
  # Main application - optimized for Fly.io
  app:
    build:
      context: .
      dockerfile: Dockerfile.fly
    container_name: airassist-app-fly
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: production
      PORT: 3000
      HOSTNAME: 0.0.0.0
      NEXT_TELEMETRY_DISABLED: 1
      # These will be set via Fly.io secrets
      DATABASE_URL: ${DATABASE_URL}
      REDIS_URL: ${REDIS_URL}
      GOOGLE_API_KEY: ${GOOGLE_API_KEY}
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NEXT_PUBLIC_APP_URL: ${NEXT_PUBLIC_APP_URL}
    volumes:
      - airassist_data:/app/data
    restart: unless-stopped
    networks:
      - airassist-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Qdrant vector database - lightweight for embeddings
  qdrant:
    image: qdrant/qdrant:v1.7.4
    container_name: airassist-qdrant-fly
    ports:
      - "6333:6333"
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      QDRANT__SERVICE__HTTP_PORT: 6333
      QDRANT__SERVICE__GRPC_PORT: 6334
      QDRANT__LOG_LEVEL: INFO
    restart: unless-stopped
    networks:
      - airassist-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  airassist_data:
  qdrant_data:

networks:
  airassist-network:
    driver: bridge